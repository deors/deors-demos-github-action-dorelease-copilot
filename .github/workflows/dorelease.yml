name: Perform the release
on:
  issue_comment:
    types: [created, edited]
permissions:
  contents: read
  issues: write
jobs:
  approve-release:
    if:
      contains(github.event.issue.labels.*.name, 'release') &&
      contains(github.event.comment.body, '/approve')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extract Issue Form Parameters
        id: parse_form
        uses: onmax/issue-form-parser@v1.6
        with:
          issue_number: ${{ github.event.issue.number }}
      - name: Log input parameters
        uses: actions/github-script@v7.0.1
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          APPROVER: ${{ github.event.comment.user.login }}
          FORM: ${{ steps.parse_form.outputs.payload }}
        with:
          script: |
            const parsedForm = JSON.parse('${{ env.FORM }}');
            const releaseVersion = parsedForm['Release Version'];
            const targetEnvironment = parsedForm['Target Environment'];
            core.info('Release request for issue: ${{ env.ISSUE_NUMBER }}');
            core.info('  Approved by: ${{ env.APPROVER }}');
            core.info('  Release Version: ' + releaseVersion);
            core.info('  Target Environment: ' + targetEnvironment);
            core.exportVariable('RELEASE_VERSION', releaseVersion);
            core.exportVariable('TARGET_ENVIRONMENT', targetEnvironment);
      - name: Perform the release process
        id: dorelease
        uses: ./
        with:
          release-version: ${{ env.RELEASE_VERSION }}
          target-environment: ${{ env.TARGET_ENVIRONMENT }}
      - name: Log release results
        run: |
          echo "${{ steps.dorelease.outputs.time }}"
          echo "${{ steps.dorelease.outputs.release-status }}"
          echo "${{ steps.dorelease.outputs.target-url }}"
      - name: Close the issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue close ${{ github.event.issue.number }}
  cancel-release:
    if:
      contains(github.event.issue.labels.*.name, 'release') &&
      contains(github.event.comment.body, '/cancel')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cancel Release
        run:
          echo "Release canceled for issue ${{ github.event.issue.number }} by
          ${{ github.event.comment.user.login }}"
      - name: Close the issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue close ${{ github.event.issue.number }}
